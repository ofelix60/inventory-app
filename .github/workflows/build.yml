name: Docker

on:
  push:
    # all branches
    branches: ['main']
  pull_request:
    branches: ['main']

env:
  REGISTRY: ghcr.io
  # IMAGE_NAME: ${{ github.repository }}
  PASSWORD: ${{ secrets.ACCESS_TOKEN }}

permissions:
  contents: read
  packages: write

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.ACCESS_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=sha

      - name: Build Docker image
        run: docker-compose -f server/docker-compose.yml build
      - name: Push Docker image
        run: docker-compose -f server/docker-compose.yml push
# name: Node.js CI

# on:
#   push:
#     # all branches
#     branches: ['main']
#   pull_request:
#     branches: ['main']

# jobs:
#   build:
#     runs-on: ubuntu-latest
#     defaults:
#       run:
#         working-directory: server
#     strategy:
#       matrix:
#         node-version: [19.x]

#     steps:
#       - uses: actions/checkout@v3
#       # git clone behind the scenes
#       - name: Use Node.js ${{ matrix.node-version }}
#         uses: actions/setup-node@v3
#         with:
#           node-version: ${{ matrix.node-version }}
#           cache: 'npm'
#           cache-dependency-path: server/package-lock.json

#       - run: npm ci
#       - run: npm test

#       - name: Build and Push Docker Image
#         uses: mr-smithers-excellent/docker-build-push@v5
#         with:
#           image: mroshii/dnd-app
#           compose-file: docker-compose.yml
#           username: ${{ secrets.DOCKER_USERNAME }}
#           password: ${{ secrets.DOCKER_PASSWORD }}
# merges to main
# set up container to ecs
# teardown old container

# name: Something

# on:

# name: Node.js CI

# on:
#   push:
#     # all branches
#     branches: ['main']
#   pull_request:
#     branches: ['main']

# jobs:
#   build:
#     runs-on: ubuntu-latest
#     defaults:
#       run:
#         working-directory: server
#     steps:
#       - uses: actions/checkout@v3
#       - name: Use Node.js ${{ matrix.node-version }}
#         uses: actions/setup-node@v3
#         with:
#           node-version: ${{ matrix.node-version }}
#           cache: 'npm'
#           cache-dependency-path: server/package-lock.json

#       - run: npm ci
#       - run: npm test

#       # Run the first Docker Compose file
#       - name: Run Docker Compose File 1
#         uses: mr-smithers-excellent/docker-build-push@v5
#         with:
#           image: docker.io/mroshii/dnd-app
#           compose-file: docker-compose.yml
#           command: up -d
#           registry-url: docker.io/mroshii/dnd-app
#           registry-username: ${{ secrets.DOCKER_USERNAME }}
#           registry-password: ${{ secrets.DOCKER_PASSWORD }}

#       # Run the second Docker Compose file
#       - name: Run Docker Compose File 2
#         uses: mr-smithers-excellent/docker-build-push@v5
#         with:
#           image: docker.io/mroshii/dnd-app
#           compose-file: docker-compose-prod.yml
#           command: up -d
#           registry-url: docker.io/mroshii/dnd-app
#           registry-username: ${{ secrets.DOCKER_USERNAME }}
#           registry-password: ${{ secrets.DOCKER_PASSWORD }}

# on: [push]
# jobs:
#   build:
#     runs-on: ubuntu-latest
#     steps:
#     - uses: actions/checkout@3
#     - name: docker build
#       run: |
#         docker build ./server -t mroshii/dnd-app
