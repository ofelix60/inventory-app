name: Deploy to EC2

on:
  workflow_run:
    workflows: ['Image build/push']
    types:
      - completed
    branches: ['main']

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        cluster: default
        service: InventoryContainer-service
        region: us-east-1
        task-definition: task-definition.json
        container-name: InventoryContainer
        container-port: 3000
        # ghcr.io/your-username/your-repository:${{ github.sha }}
        image: ghcr.io/ofelix60/inventory-app_dnd-app:main
        wait-for-service-stability: true
# - name: Deploy to ECS
#       uses: aws-actions/amazon-ecs-deploy-task-definition@v1
#       with:
#         cluster: default
#         service: ECS-Inventory-service
#         region: us-east-1
#         task-definition: first-run-task-definition
#         container-name: your-container-name
#         container-port: 8000
#         # ghcr.io/your-username/your-repository:${{ github.sha }}
#         image: ghcr.io/ofelix60/server_dnd-app:main
#         wait-for-service-stability: true

# deploy:
#   runs-on: ubuntu-latest
#   needs: build
#   steps:
#     - name: Deploy to EC2
#       uses: aws-actions/ec2-instance-control@v1
#       with:
#         region: us-east-1
#         instance-ids: i-1234567890abcdefg
#         wait-until-running: true
#         action: start
#     - name: Deploy Docker container
#       uses: docker/deploy-to-ecs-action@v1
#       with:
#         registry-url: docker.pkg.github.com
#         repository: docker.pkg.github.com/your-user/your-docker-image
#         region: us-east-1
#         cluster: your-cluster
#         service: your-service
#         force-new-deployment: true
